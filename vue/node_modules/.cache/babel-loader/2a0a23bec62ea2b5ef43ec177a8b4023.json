{"remainingRequest":"/var/www/html/fintech/vue/node_modules/babel-loader/lib/index.js!/var/www/html/fintech/vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/fintech/vue/src/store/UnitModule.js","dependencies":[{"path":"/var/www/html/fintech/vue/src/store/UnitModule.js","mtime":1613549997284},{"path":"/var/www/html/fintech/vue/node_modules/cache-loader/dist/cjs.js","mtime":1613550007784},{"path":"/var/www/html/fintech/vue/node_modules/babel-loader/lib/index.js","mtime":1613550007128},{"path":"/var/www/html/fintech/vue/node_modules/eslint-loader/index.js","mtime":1613550008940}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgVW5pdFNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvVW5pdFNlcnZpY2UnOwp2YXIgaW5pdGlhbFN0YXRlID0gewogIGxpc3Q6IFtdLAogIHNlbGVjdGVkOiAnJwp9OwpleHBvcnQgdmFyIHVuaXQgPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogaW5pdGlhbFN0YXRlLAogIGFjdGlvbnM6IHsKICAgIC8qKgogICAgICogR2V0IHByb3BlcnR5CiAgICAgKiAKICAgICAqLwogICAgbGlzdDogZnVuY3Rpb24gbGlzdChfcmVmLCBwcm9wZXJ0eUlEKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgcmV0dXJuIFVuaXRTZXJ2aWNlLmdldFByb3BlcnR5VW5pdHMocHJvcGVydHlJRCkudGhlbihmdW5jdGlvbiAoZmVlZGJhY2spIHsKICAgICAgICBjb21taXQoJ3VuaXRMaXN0JywgZmVlZGJhY2suZGF0YSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmZWVkYmFjayk7CiAgICAgIH0sIGZ1bmN0aW9uIChmYWlsKSB7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGZhaWwpOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBDcmVhdGUgdW5pdAogICAgICovCiAgICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZShfcmVmMiwgdW5pdCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICByZXR1cm4gVW5pdFNlcnZpY2UuY3JlYXRlVW5pdCh1bml0KS50aGVuKGZ1bmN0aW9uIChmZWVkYmFjaykgewogICAgICAgIHZhciB1bml0ID0gZmVlZGJhY2suZGF0YTsKICAgICAgICBjb21taXQoJ2NyZWF0ZWRVbml0JywgdW5pdCk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmZWVkYmFjayk7CiAgICAgIH0sIGZ1bmN0aW9uIChmYWlsKSB7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGZhaWwpOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBVcGRhdGUgdW5pdAogICAgICovCiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShfcmVmMywgdW5pdCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICByZXR1cm4gVW5pdFNlcnZpY2UudXBkYXRlVW5pdCh1bml0KS50aGVuKGZ1bmN0aW9uIChmZWVkYmFjaykgewogICAgICAgIHZhciB1bml0ID0gZmVlZGJhY2suZGF0YTsKICAgICAgICBjb21taXQoJ3VwZGF0ZWRVbml0JywgdW5pdCk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmZWVkYmFjayk7CiAgICAgIH0sIGZ1bmN0aW9uIChmYWlsKSB7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGZhaWwpOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBEZWxldGUgdW5pdAogICAgICovCiAgICBkZWxldGU6IGZ1bmN0aW9uIF9kZWxldGUoX3JlZjQsIHVuaXRJRCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICByZXR1cm4gVW5pdFNlcnZpY2UuZGVsZXRlVW5pdCh1bml0SUQpLnRoZW4oZnVuY3Rpb24gKGZlZWRiYWNrKSB7CiAgICAgICAgdmFyIHVuaXQgPSBmZWVkYmFjay5kYXRhOwogICAgICAgIGNvbW1pdCgnZGVsZXRlZFVuaXQnLCB1bml0LmlkKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZlZWRiYWNrKTsKICAgICAgfSwgZnVuY3Rpb24gKGZhaWwpIHsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZmFpbCk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICAvKioKICAgICAqIFN0b3JlIHVuaXQgbGlzdAogICAgICogCiAgICAgKi8KICAgIHVuaXRMaXN0OiBmdW5jdGlvbiB1bml0TGlzdChzdGF0ZSwgbGlzdCkgewogICAgICBzdGF0ZS5saXN0ID0gbGlzdDsKICAgIH0sCgogICAgLyoqCiAgICAgKiBTdG9yZSBjcmVhdGVkIHVuaXQKICAgICovCiAgICBjcmVhdGVkVW5pdDogZnVuY3Rpb24gY3JlYXRlZFVuaXQoc3RhdGUsIHVuaXQpIHsKICAgICAgc3RhdGUubGlzdC5wdXNoKHVuaXQpOwogICAgfSwKCiAgICAvKioKICAgICAgKiBVcGRhdGUgdW5pdAogICAgICAqLwogICAgdXBkYXRlZFVuaXQ6IGZ1bmN0aW9uIHVwZGF0ZWRVbml0KHN0YXRlLCBfdXBkYXRlZFVuaXQpIHsKICAgICAgdmFyIHVuaXRJbmRleCA9IHN0YXRlLmxpc3QuZmluZEluZGV4KGZ1bmN0aW9uICh1bml0KSB7CiAgICAgICAgcmV0dXJuIHVuaXQuaWQgPT09IF91cGRhdGVkVW5pdC5pZDsKICAgICAgfSk7CgogICAgICBpZiAodW5pdEluZGV4ICE9PSAtMSkgewogICAgICAgIHN0YXRlLmxpc3Quc3BsaWNlKHVuaXRJbmRleCwgMSwgX3VwZGF0ZWRVbml0KTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIFJlbW92ZSBkZWxldGVkIHVuaXQKICAgICAqLwogICAgZGVsZXRlZFVuaXQ6IGZ1bmN0aW9uIGRlbGV0ZWRVbml0KHN0YXRlLCB1bml0SUQpIHsKICAgICAgdmFyIHVuaXRJbmRleCA9IHN0YXRlLmxpc3QuZmluZEluZGV4KGZ1bmN0aW9uICh1bml0KSB7CiAgICAgICAgcmV0dXJuIHVuaXQuaWQgPT09IHVuaXRJRDsKICAgICAgfSk7CiAgICAgIHN0YXRlLmxpc3Quc3BsaWNlKHVuaXRJbmRleCwgMSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/var/www/html/fintech/vue/src/store/UnitModule.js"],"names":["UnitService","initialState","list","selected","unit","namespaced","state","actions","propertyID","commit","getPropertyUnits","then","feedback","data","Promise","resolve","fail","reject","create","createUnit","update","updateUnit","delete","unitID","deleteUnit","id","mutations","unitList","createdUnit","push","updatedUnit","unitIndex","findIndex","splice","deletedUnit"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,yBAAxB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG,EADU;AAEjBC,EAAAA,QAAQ,EAAG;AAFM,CAArB;AAKA,OAAO,IAAMC,IAAI,GAAG;AAChBC,EAAAA,UAAU,EAAE,IADI;AAEhBC,EAAAA,KAAK,EAAEL,YAFS;AAGhBM,EAAAA,OAAO,EAAE;AAEL;AACR;AACA;AACA;AACQL,IAAAA,IANK,sBAMYM,UANZ,EAMwB;AAAA,UAAtBC,MAAsB,QAAtBA,MAAsB;AACzB,aAAOT,WAAW,CAACU,gBAAZ,CAA6BF,UAA7B,EAAyCG,IAAzC,CACH,UAAAC,QAAQ,EAAI;AACRH,QAAAA,MAAM,CAAC,UAAD,EAAaG,QAAQ,CAACC,IAAtB,CAAN;AACA,eAAOC,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OAJE,EAKH,UAAAI,IAAI,EAAI;AACJ,eAAOF,OAAO,CAACG,MAAR,CAAeD,IAAf,CAAP;AACH,OAPE,CAAP;AASH,KAhBI;;AAkBL;AACR;AACA;AACQE,IAAAA,MArBK,yBAqBcd,IArBd,EAqBoB;AAAA,UAAhBK,MAAgB,SAAhBA,MAAgB;AACrB,aAAOT,WAAW,CAACmB,UAAZ,CAAuBf,IAAvB,EAA6BO,IAA7B,CACH,UAAAC,QAAQ,EAAI;AACR,YAAIR,IAAI,GAAGQ,QAAQ,CAACC,IAApB;AACAJ,QAAAA,MAAM,CAAC,aAAD,EAAgBL,IAAhB,CAAN;AACA,eAAOU,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OALE,EAMH,UAAAI,IAAI,EAAI;AACJ,eAAOF,OAAO,CAACG,MAAR,CAAeD,IAAf,CAAP;AACH,OARE,CAAP;AAUH,KAhCI;;AAkCL;AACR;AACA;AACQI,IAAAA,MArCK,yBAqCchB,IArCd,EAqCoB;AAAA,UAAhBK,MAAgB,SAAhBA,MAAgB;AACrB,aAAOT,WAAW,CAACqB,UAAZ,CAAuBjB,IAAvB,EAA6BO,IAA7B,CACH,UAAAC,QAAQ,EAAI;AACR,YAAIR,IAAI,GAAGQ,QAAQ,CAACC,IAApB;AACAJ,QAAAA,MAAM,CAAC,aAAD,EAAgBL,IAAhB,CAAN;AACA,eAAOU,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OALE,EAMH,UAAAI,IAAI,EAAI;AACJ,eAAOF,OAAO,CAACG,MAAR,CAAeD,IAAf,CAAP;AACH,OARE,CAAP;AAUH,KAhDI;;AAkDL;AACR;AACA;AACQM,IAAAA,MArDK,0BAqDcC,MArDd,EAqDsB;AAAA,UAAlBd,MAAkB,SAAlBA,MAAkB;AACvB,aAAOT,WAAW,CAACwB,UAAZ,CAAuBD,MAAvB,EAA+BZ,IAA/B,CACH,UAAAC,QAAQ,EAAI;AACR,YAAIR,IAAI,GAAGQ,QAAQ,CAACC,IAApB;AACAJ,QAAAA,MAAM,CAAC,aAAD,EAAgBL,IAAI,CAACqB,EAArB,CAAN;AACA,eAAOX,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OALE,EAMH,UAAAI,IAAI,EAAI;AACJ,eAAOF,OAAO,CAACG,MAAR,CAAeD,IAAf,CAAP;AACH,OARE,CAAP;AAUH;AAhEI,GAHO;AAsEhBU,EAAAA,SAAS,EAAE;AAEP;AACR;AACA;AACA;AACQC,IAAAA,QANO,oBAMErB,KANF,EAMSJ,IANT,EAMe;AACnBI,MAAAA,KAAK,CAACJ,IAAN,GAAaA,IAAb;AACF,KARM;;AAUP;AACR;AACA;AACO0B,IAAAA,WAbQ,uBAaItB,KAbJ,EAaWF,IAbX,EAaiB;AACpBE,MAAAA,KAAK,CAACJ,IAAN,CAAW2B,IAAX,CAAgBzB,IAAhB;AACJ,KAfO;;AAiBR;AACP;AACA;AACQ0B,IAAAA,WApBO,uBAoBKxB,KApBL,EAoBYwB,YApBZ,EAoByB;AAC5B,UAAIC,SAAS,GAAGzB,KAAK,CAACJ,IAAN,CAAW8B,SAAX,CAAqB,UAAA5B,IAAI;AAAA,eAAIA,IAAI,CAACqB,EAAL,KAAYK,YAAW,CAACL,EAA5B;AAAA,OAAzB,CAAhB;;AACA,UAAGM,SAAS,KAAK,CAAC,CAAlB,EAAqB;AACjBzB,QAAAA,KAAK,CAACJ,IAAN,CAAW+B,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B,EAAgCD,YAAhC;AACH;AACJ,KAzBM;;AA2BP;AACR;AACA;AACQI,IAAAA,WA9BO,uBA8BK5B,KA9BL,EA8BYiB,MA9BZ,EA8BoB;AACvB,UAAIQ,SAAS,GAAGzB,KAAK,CAACJ,IAAN,CAAW8B,SAAX,CAAqB,UAAA5B,IAAI;AAAA,eAAIA,IAAI,CAACqB,EAAL,KAAYF,MAAhB;AAAA,OAAzB,CAAhB;AACAjB,MAAAA,KAAK,CAACJ,IAAN,CAAW+B,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B;AACH;AAjCM;AAtEK,CAAb","sourcesContent":["import UnitService from '../services/UnitService';\n\nconst initialState = {\n    list : [],\n    selected : '',\n}\n\nexport const unit = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        \n        /**\n         * Get property\n         * \n         */\n        list({ commit }, propertyID) {\n            return UnitService.getPropertyUnits(propertyID).then(\n                feedback => {\n                    commit('unitList', feedback.data)\n                    return Promise.resolve(feedback)\n                },\n                fail => {\n                    return Promise.reject(fail)\n                }\n            );            \n        },\n\n        /**\n         * Create unit\n         */\n        create({ commit }, unit) {\n            return UnitService.createUnit(unit).then(\n                feedback => {\n                    let unit = feedback.data;\n                    commit('createdUnit', unit);\n                    return Promise.resolve(feedback);\n                },\n                fail => {\n                    return Promise.reject(fail);\n                }\n            )\n        },\n\n        /**\n         * Update unit\n         */\n        update({ commit }, unit) {\n            return UnitService.updateUnit(unit).then(\n                feedback => {\n                    let unit = feedback.data;\n                    commit('updatedUnit', unit);\n                    return Promise.resolve(feedback);\n                },\n                fail => {\n                    return Promise.reject(fail);\n                }\n            )\n        },\n\n        /**\n         * Delete unit\n         */\n        delete({ commit }, unitID) {\n            return UnitService.deleteUnit(unitID).then(\n                feedback => {\n                    let unit = feedback.data;\n                    commit('deletedUnit', unit.id);\n                    return Promise.resolve(feedback);\n                },\n                fail => {\n                    return Promise.reject(fail);\n                }\n            )\n        }\n\n    },\n    mutations: {\n\n        /**\n         * Store unit list\n         * \n         */\n        unitList(state, list) {\n           state.list = list\n        },\n\n        /**\n         * Store created unit\n        */\n       createdUnit(state, unit) {\n            state.list.push(unit);\n       },\n\n       /**\n         * Update unit\n         */\n        updatedUnit(state, updatedUnit) {\n            let unitIndex = state.list.findIndex(unit => unit.id === updatedUnit.id)\n            if(unitIndex !== -1) {\n                state.list.splice(unitIndex, 1, updatedUnit)\n            }\n        },\n\n        /**\n         * Remove deleted unit\n         */\n        deletedUnit(state, unitID) {\n            let unitIndex = state.list.findIndex(unit => unit.id === unitID)\n            state.list.splice(unitIndex, 1)\n        },\n    }\n}"]}]}