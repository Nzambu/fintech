{"remainingRequest":"/var/www/html/real/vue/node_modules/babel-loader/lib/index.js!/var/www/html/real/vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/real/vue/src/store/TenantModule.js","dependencies":[{"path":"/var/www/html/real/vue/src/store/TenantModule.js","mtime":1612878512096},{"path":"/var/www/html/real/vue/node_modules/cache-loader/dist/cjs.js","mtime":1612338812780},{"path":"/var/www/html/real/vue/node_modules/babel-loader/lib/index.js","mtime":1612338812660},{"path":"/var/www/html/real/vue/node_modules/eslint-loader/index.js","mtime":1612338813868}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgVGVuYW50U2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9UZW5hbnRTZXJ2aWNlJzsKdmFyIGluaXRpYWxTdGF0ZSA9IHsKICBsaXN0OiBbXSwKICBzZWxlY3RlZDogJycKfTsKZXhwb3J0IHZhciB0ZW5hbnQgPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogaW5pdGlhbFN0YXRlLAogIGFjdGlvbnM6IHsKICAgIC8qKgogICAgICogR2V0IHByb3BlcnR5CiAgICAgKiAKICAgICAqLwogICAgbGlzdDogZnVuY3Rpb24gbGlzdChfcmVmLCBwcm9wZXJ0eUlEKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgY29uc29sZS5sb2cocHJvcGVydHlJRCk7CiAgICAgIHJldHVybiBUZW5hbnRTZXJ2aWNlLmdldFByb3BlcnR5VGVuYW50cyhwcm9wZXJ0eUlEKS50aGVuKGZ1bmN0aW9uIChmZWVkYmFjaykgewogICAgICAgIGNvbnNvbGUubG9nKGZlZWRiYWNrKTsKICAgICAgICBjb21taXQoJ3RlbmFudExpc3QnLCBmZWVkYmFjay5kYXRhKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZlZWRiYWNrKTsKICAgICAgfSwgZnVuY3Rpb24gKGZhaWwpIHsKICAgICAgICBjb25zb2xlLmxvZyhmYWlsKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZmFpbCk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIERlbGV0ZSBwcm9wZXJ0eQogICAgICovCiAgICBkZWxldGU6IGZ1bmN0aW9uIF9kZWxldGUoX3JlZjIsIHRlbmFudElEKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIHJldHVybiBUZW5hbnRTZXJ2aWNlLmRlbGV0ZVRlbmFudCh0ZW5hbnRJRCkudGhlbihmdW5jdGlvbiAoZmVlZGJhY2spIHsKICAgICAgICB2YXIgdGVuYW50ID0gZmVlZGJhY2suZGF0YTsKICAgICAgICBjb21taXQoJ2RlbGV0ZWRUZW5hbnQnLCB0ZW5hbnQuaWQpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZmVlZGJhY2spOwogICAgICB9LCBmdW5jdGlvbiAoZmFpbCkgewogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChmYWlsKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIC8qKgogICAgICogU3RvcmUgdGVuYW50IGxpc3QKICAgICAqIAogICAgICovCiAgICB0ZW5hbnRMaXN0OiBmdW5jdGlvbiB0ZW5hbnRMaXN0KHN0YXRlLCBsaXN0KSB7CiAgICAgIHN0YXRlLmxpc3QgPSBsaXN0OwogICAgfSwKCiAgICAvKioKICAgICAqIFJlbW92ZSBkZWxldGVkIHRlbmFudAogICAgICovCiAgICBkZWxldGVkVGVuYW50OiBmdW5jdGlvbiBkZWxldGVkVGVuYW50KHN0YXRlLCB0ZW5hbnRJRCkgewogICAgICB2YXIgdGVuYW50SW5kZXggPSBzdGF0ZS5saXN0LmZpbmRJbmRleChmdW5jdGlvbiAodGVuYW50KSB7CiAgICAgICAgcmV0dXJuIHRlbmFudC5pZCA9PT0gdGVuYW50SUQ7CiAgICAgIH0pOwogICAgICBzdGF0ZS5saXN0LnNwbGljZSh0ZW5hbnRJbmRleCwgMSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/var/www/html/real/vue/src/store/TenantModule.js"],"names":["TenantService","initialState","list","selected","tenant","namespaced","state","actions","propertyID","commit","console","log","getPropertyTenants","then","feedback","data","Promise","resolve","fail","reject","delete","tenantID","deleteTenant","id","mutations","tenantList","deletedTenant","tenantIndex","findIndex","splice"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,2BAA1B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG,EADU;AAEjBC,EAAAA,QAAQ,EAAG;AAFM,CAArB;AAKA,OAAO,IAAMC,MAAM,GAAG;AAClBC,EAAAA,UAAU,EAAE,IADM;AAElBC,EAAAA,KAAK,EAAEL,YAFW;AAGlBM,EAAAA,OAAO,EAAE;AAEL;AACR;AACA;AACA;AACQL,IAAAA,IANK,sBAMYM,UANZ,EAMwB;AAAA,UAAtBC,MAAsB,QAAtBA,MAAsB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,aAAOR,aAAa,CAACY,kBAAd,CAAiCJ,UAAjC,EAA6CK,IAA7C,CACH,UAAAC,QAAQ,EAAI;AACRJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAL,QAAAA,MAAM,CAAC,YAAD,EAAeK,QAAQ,CAACC,IAAxB,CAAN;AACA,eAAOC,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OALE,EAMH,UAAAI,IAAI,EAAI;AACJR,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,eAAOF,OAAO,CAACG,MAAR,CAAeD,IAAf,CAAP;AACH,OATE,CAAP;AAWH,KAnBI;;AAqBL;AACR;AACA;AACQE,IAAAA,MAxBK,0BAwBcC,QAxBd,EAwBwB;AAAA,UAApBZ,MAAoB,SAApBA,MAAoB;AACzB,aAAOT,aAAa,CAACsB,YAAd,CAA2BD,QAA3B,EAAqCR,IAArC,CACH,UAAAC,QAAQ,EAAI;AACR,YAAIV,MAAM,GAAGU,QAAQ,CAACC,IAAtB;AACAN,QAAAA,MAAM,CAAC,eAAD,EAAkBL,MAAM,CAACmB,EAAzB,CAAN;AACA,eAAOP,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OALE,EAMH,UAAAI,IAAI,EAAI;AACJ,eAAOF,OAAO,CAACG,MAAR,CAAeD,IAAf,CAAP;AACH,OARE,CAAP;AAUH;AAnCI,GAHS;AAyClBM,EAAAA,SAAS,EAAE;AAEP;AACR;AACA;AACA;AACQC,IAAAA,UANO,sBAMInB,KANJ,EAMWJ,IANX,EAMiB;AACrBI,MAAAA,KAAK,CAACJ,IAAN,GAAaA,IAAb;AACF,KARM;;AAUP;AACR;AACA;AACQwB,IAAAA,aAbO,yBAaOpB,KAbP,EAace,QAbd,EAawB;AAC3B,UAAIM,WAAW,GAAGrB,KAAK,CAACJ,IAAN,CAAW0B,SAAX,CAAqB,UAAAxB,MAAM;AAAA,eAAIA,MAAM,CAACmB,EAAP,KAAcF,QAAlB;AAAA,OAA3B,CAAlB;AACAf,MAAAA,KAAK,CAACJ,IAAN,CAAW2B,MAAX,CAAkBF,WAAlB,EAA+B,CAA/B;AACH;AAhBM;AAzCO,CAAf","sourcesContent":["import TenantService from '../services/TenantService';\n\nconst initialState = {\n    list : [],\n    selected : '',\n}\n\nexport const tenant = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        \n        /**\n         * Get property\n         * \n         */\n        list({ commit }, propertyID) {\n            console.log(propertyID)\n            return TenantService.getPropertyTenants(propertyID).then(\n                feedback => {\n                    console.log(feedback)\n                    commit('tenantList', feedback.data)\n                    return Promise.resolve(feedback)\n                },\n                fail => {\n                    console.log(fail)\n                    return Promise.reject(fail)\n                }\n            );            \n        },\n\n        /**\n         * Delete property\n         */\n        delete({ commit }, tenantID) {\n            return TenantService.deleteTenant(tenantID).then(\n                feedback => {\n                    let tenant = feedback.data;\n                    commit('deletedTenant', tenant.id);\n                    return Promise.resolve(feedback);\n                },\n                fail => {\n                    return Promise.reject(fail);\n                }\n            )\n        }\n\n    },\n    mutations: {\n\n        /**\n         * Store tenant list\n         * \n         */\n        tenantList(state, list) {\n           state.list = list\n        },\n\n        /**\n         * Remove deleted tenant\n         */\n        deletedTenant(state, tenantID) {\n            let tenantIndex = state.list.findIndex(tenant => tenant.id === tenantID)\n            state.list.splice(tenantIndex, 1)\n        },\n    }\n}"]}]}