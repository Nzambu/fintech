{"remainingRequest":"/var/www/html/fintech/vue/node_modules/babel-loader/lib/index.js!/var/www/html/fintech/vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/fintech/vue/src/store/TenantModule.js","dependencies":[{"path":"/var/www/html/fintech/vue/src/store/TenantModule.js","mtime":1613549997284},{"path":"/var/www/html/fintech/vue/node_modules/cache-loader/dist/cjs.js","mtime":1613550007784},{"path":"/var/www/html/fintech/vue/node_modules/babel-loader/lib/index.js","mtime":1613550007128},{"path":"/var/www/html/fintech/vue/node_modules/eslint-loader/index.js","mtime":1613550008940}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgVGVuYW50U2VydmljZSBmcm9tICcuLi9zZXJ2aWNlcy9UZW5hbnRTZXJ2aWNlJzsKdmFyIGluaXRpYWxTdGF0ZSA9IHsKICBsaXN0OiBbXSwKICBzZWxlY3RlZDogJycKfTsKZXhwb3J0IHZhciB0ZW5hbnQgPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogaW5pdGlhbFN0YXRlLAogIGFjdGlvbnM6IHsKICAgIC8qKgogICAgICogR2V0IHByb3BlcnR5CiAgICAgKiAKICAgICAqLwogICAgbGlzdDogZnVuY3Rpb24gbGlzdChfcmVmLCBwcm9wZXJ0eUlEKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgcmV0dXJuIFRlbmFudFNlcnZpY2UuZ2V0UHJvcGVydHlUZW5hbnRzKHByb3BlcnR5SUQpLnRoZW4oZnVuY3Rpb24gKGZlZWRiYWNrKSB7CiAgICAgICAgY29tbWl0KCd0ZW5hbnRMaXN0JywgZmVlZGJhY2suZGF0YSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmZWVkYmFjayk7CiAgICAgIH0sIGZ1bmN0aW9uIChmYWlsKSB7CiAgICAgICAgY29uc29sZS5sb2coZmFpbCk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGZhaWwpOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBEZWxldGUgcHJvcGVydHkKICAgICAqLwogICAgZGVsZXRlOiBmdW5jdGlvbiBfZGVsZXRlKF9yZWYyLCB0ZW5hbnRJRCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICByZXR1cm4gVGVuYW50U2VydmljZS5kZWxldGVUZW5hbnQodGVuYW50SUQpLnRoZW4oZnVuY3Rpb24gKGZlZWRiYWNrKSB7CiAgICAgICAgdmFyIHRlbmFudCA9IGZlZWRiYWNrLmRhdGE7CiAgICAgICAgY29tbWl0KCdkZWxldGVkVGVuYW50JywgdGVuYW50LmlkKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZlZWRiYWNrKTsKICAgICAgfSwgZnVuY3Rpb24gKGZhaWwpIHsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZmFpbCk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICAvKioKICAgICAqIFN0b3JlIHRlbmFudCBsaXN0CiAgICAgKiAKICAgICAqLwogICAgdGVuYW50TGlzdDogZnVuY3Rpb24gdGVuYW50TGlzdChzdGF0ZSwgbGlzdCkgewogICAgICBzdGF0ZS5saXN0ID0gbGlzdDsKICAgIH0sCgogICAgLyoqCiAgICAgKiBSZW1vdmUgZGVsZXRlZCB0ZW5hbnQKICAgICAqLwogICAgZGVsZXRlZFRlbmFudDogZnVuY3Rpb24gZGVsZXRlZFRlbmFudChzdGF0ZSwgdGVuYW50SUQpIHsKICAgICAgdmFyIHRlbmFudEluZGV4ID0gc3RhdGUubGlzdC5maW5kSW5kZXgoZnVuY3Rpb24gKHRlbmFudCkgewogICAgICAgIHJldHVybiB0ZW5hbnQuaWQgPT09IHRlbmFudElEOwogICAgICB9KTsKICAgICAgc3RhdGUubGlzdC5zcGxpY2UodGVuYW50SW5kZXgsIDEpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/var/www/html/fintech/vue/src/store/TenantModule.js"],"names":["TenantService","initialState","list","selected","tenant","namespaced","state","actions","propertyID","commit","getPropertyTenants","then","feedback","data","Promise","resolve","fail","console","log","reject","delete","tenantID","deleteTenant","id","mutations","tenantList","deletedTenant","tenantIndex","findIndex","splice"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,2BAA1B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG,EADU;AAEjBC,EAAAA,QAAQ,EAAG;AAFM,CAArB;AAKA,OAAO,IAAMC,MAAM,GAAG;AAClBC,EAAAA,UAAU,EAAE,IADM;AAElBC,EAAAA,KAAK,EAAEL,YAFW;AAGlBM,EAAAA,OAAO,EAAE;AAEL;AACR;AACA;AACA;AACQL,IAAAA,IANK,sBAMYM,UANZ,EAMwB;AAAA,UAAtBC,MAAsB,QAAtBA,MAAsB;AACzB,aAAOT,aAAa,CAACU,kBAAd,CAAiCF,UAAjC,EAA6CG,IAA7C,CACH,UAAAC,QAAQ,EAAI;AACRH,QAAAA,MAAM,CAAC,YAAD,EAAeG,QAAQ,CAACC,IAAxB,CAAN;AACA,eAAOC,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OAJE,EAKH,UAAAI,IAAI,EAAI;AACJC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,eAAOF,OAAO,CAACK,MAAR,CAAeH,IAAf,CAAP;AACH,OARE,CAAP;AAUH,KAjBI;;AAmBL;AACR;AACA;AACQI,IAAAA,MAtBK,0BAsBcC,QAtBd,EAsBwB;AAAA,UAApBZ,MAAoB,SAApBA,MAAoB;AACzB,aAAOT,aAAa,CAACsB,YAAd,CAA2BD,QAA3B,EAAqCV,IAArC,CACH,UAAAC,QAAQ,EAAI;AACR,YAAIR,MAAM,GAAGQ,QAAQ,CAACC,IAAtB;AACAJ,QAAAA,MAAM,CAAC,eAAD,EAAkBL,MAAM,CAACmB,EAAzB,CAAN;AACA,eAAOT,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OALE,EAMH,UAAAI,IAAI,EAAI;AACJ,eAAOF,OAAO,CAACK,MAAR,CAAeH,IAAf,CAAP;AACH,OARE,CAAP;AAUH;AAjCI,GAHS;AAuClBQ,EAAAA,SAAS,EAAE;AAEP;AACR;AACA;AACA;AACQC,IAAAA,UANO,sBAMInB,KANJ,EAMWJ,IANX,EAMiB;AACrBI,MAAAA,KAAK,CAACJ,IAAN,GAAaA,IAAb;AACF,KARM;;AAUP;AACR;AACA;AACQwB,IAAAA,aAbO,yBAaOpB,KAbP,EAace,QAbd,EAawB;AAC3B,UAAIM,WAAW,GAAGrB,KAAK,CAACJ,IAAN,CAAW0B,SAAX,CAAqB,UAAAxB,MAAM;AAAA,eAAIA,MAAM,CAACmB,EAAP,KAAcF,QAAlB;AAAA,OAA3B,CAAlB;AACAf,MAAAA,KAAK,CAACJ,IAAN,CAAW2B,MAAX,CAAkBF,WAAlB,EAA+B,CAA/B;AACH;AAhBM;AAvCO,CAAf","sourcesContent":["import TenantService from '../services/TenantService';\n\nconst initialState = {\n    list : [],\n    selected : '',\n}\n\nexport const tenant = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        \n        /**\n         * Get property\n         * \n         */\n        list({ commit }, propertyID) {\n            return TenantService.getPropertyTenants(propertyID).then(\n                feedback => {\n                    commit('tenantList', feedback.data)\n                    return Promise.resolve(feedback)\n                },\n                fail => {\n                    console.log(fail)\n                    return Promise.reject(fail)\n                }\n            );            \n        },\n\n        /**\n         * Delete property\n         */\n        delete({ commit }, tenantID) {\n            return TenantService.deleteTenant(tenantID).then(\n                feedback => {\n                    let tenant = feedback.data;\n                    commit('deletedTenant', tenant.id);\n                    return Promise.resolve(feedback);\n                },\n                fail => {\n                    return Promise.reject(fail);\n                }\n            )\n        }\n\n    },\n    mutations: {\n\n        /**\n         * Store tenant list\n         * \n         */\n        tenantList(state, list) {\n           state.list = list\n        },\n\n        /**\n         * Remove deleted tenant\n         */\n        deletedTenant(state, tenantID) {\n            let tenantIndex = state.list.findIndex(tenant => tenant.id === tenantID)\n            state.list.splice(tenantIndex, 1)\n        },\n    }\n}"]}]}