{"remainingRequest":"/var/www/html/real/vue/node_modules/babel-loader/lib/index.js!/var/www/html/real/vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/real/vue/src/store/PropertyModule.js","dependencies":[{"path":"/var/www/html/real/vue/src/store/PropertyModule.js","mtime":1612778470848},{"path":"/var/www/html/real/vue/node_modules/cache-loader/dist/cjs.js","mtime":1612338812780},{"path":"/var/www/html/real/vue/node_modules/babel-loader/lib/index.js","mtime":1612338812660},{"path":"/var/www/html/real/vue/node_modules/eslint-loader/index.js","mtime":1612338813868}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgUHJvcGVydHlTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL1Byb3BlcnR5U2VydmljZSc7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgbGlzdDogW10sCiAgc2VsZWN0ZWQ6ICcnCn07CmV4cG9ydCB2YXIgcHJvcGVydHkgPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogaW5pdGlhbFN0YXRlLAogIGFjdGlvbnM6IHsKICAgIC8qKgogICAgICogR2V0IHByb3BlcnR5CiAgICAgKiAKICAgICAqLwogICAgbGlzdDogZnVuY3Rpb24gbGlzdChfcmVmKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgcmV0dXJuIFByb3BlcnR5U2VydmljZS5nZXRPd25lclByb3BlcnR5KCkudGhlbihmdW5jdGlvbiAoZmVlZGJhY2spIHsKICAgICAgICBjb21taXQoJ3Byb3BlcnR5TGlzdCcsIGZlZWRiYWNrLmRhdGEpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZmVlZGJhY2spOwogICAgICB9LCBmdW5jdGlvbiAoZmFpbCkgewogICAgICAgIGNvbnNvbGUubG9nKGZhaWwucmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFNldCBzZWxlY3RlZCBwcm9wZXJ0eQogICAgICogCiAgICAgKi8KICAgIHNlbGVjdGVkOiBmdW5jdGlvbiBzZWxlY3RlZChfcmVmMiwgcHJvcGVydHkpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCdzZWxlY3RlZFByb3BlcnR5JywgcHJvcGVydHkpOwogICAgICByZXR1cm4gcHJvcGVydHk7CiAgICB9LAoKICAgIC8qKgogICAgICogRGVsZXRlIHByb3BlcnR5CiAgICAgKi8KICAgIGRlbGV0ZTogZnVuY3Rpb24gX2RlbGV0ZShfcmVmMywgcHJvcGVydHlJRCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICByZXR1cm4gUHJvcGVydHlTZXJ2aWNlLmRlbGV0ZVByb3BlcnR5KHByb3BlcnR5SUQpLnRoZW4oZnVuY3Rpb24gKGZlZWRiYWNrKSB7CiAgICAgICAgdmFyIHByb3BlcnR5ID0gZmVlZGJhY2suZGF0YTsKICAgICAgICBjb21taXQoJ2RlbGV0ZWRQcm9wZXJ0eScsIHByb3BlcnR5LmlkKTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZlZWRiYWNrKTsKICAgICAgfSwgZnVuY3Rpb24gKGZhaWwpIHsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZmFpbCk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICAvKioKICAgICAqIFN0b3JlIHByb3BlcnR5IGxpc3QKICAgICAqIAogICAgICovCiAgICBwcm9wZXJ0eUxpc3Q6IGZ1bmN0aW9uIHByb3BlcnR5TGlzdChzdGF0ZSwgbGlzdCkgewogICAgICBzdGF0ZS5saXN0ID0gbGlzdDsKICAgIH0sCgogICAgLyoqCiAgICAgKiBTdG9yZSBzZWxlY3RlZCBwcm9wZXJ0eQogICAgICovCiAgICBzZWxlY3RlZFByb3BlcnR5OiBmdW5jdGlvbiBzZWxlY3RlZFByb3BlcnR5KHN0YXRlLCBwcm9wZXJ0eSkgewogICAgICBzdGF0ZS5zZWxlY3RlZCA9IHByb3BlcnR5OwogICAgfSwKCiAgICAvKioKICAgICAqIFJlbW92ZSBkZWxldGVkIHByb3BlcnR5CiAgICAgKi8KICAgIGRlbGV0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gZGVsZXRlZFByb3BlcnR5KHN0YXRlLCBwcm9wZXJ0eUlEKSB7CiAgICAgIHZhciBwcm9wZXJ0eUluZGV4ID0gc3RhdGUubGlzdC5maW5kSW5kZXgoZnVuY3Rpb24gKHByb3BlcnR5KSB7CiAgICAgICAgcmV0dXJuIHByb3BlcnR5LmlkID09PSBwcm9wZXJ0eUlEOwogICAgICB9KTsKICAgICAgc3RhdGUubGlzdC5zcGxpY2UocHJvcGVydHlJbmRleCwgMSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/var/www/html/real/vue/src/store/PropertyModule.js"],"names":["PropertyService","initialState","list","selected","property","namespaced","state","actions","commit","getOwnerProperty","then","feedback","data","Promise","resolve","fail","console","log","response","delete","propertyID","deleteProperty","id","reject","mutations","propertyList","selectedProperty","deletedProperty","propertyIndex","findIndex","splice"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,6BAA5B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAG,EADU;AAEjBC,EAAAA,QAAQ,EAAG;AAFM,CAArB;AAKA,OAAO,IAAMC,QAAQ,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpBC,EAAAA,KAAK,EAAEL,YAFa;AAGpBM,EAAAA,OAAO,EAAE;AAEL;AACR;AACA;AACA;AACQL,IAAAA,IANK,sBAMY;AAAA,UAAVM,MAAU,QAAVA,MAAU;AACb,aAAOR,eAAe,CAACS,gBAAhB,GAAmCC,IAAnC,CACH,UAAAC,QAAQ,EAAI;AACRH,QAAAA,MAAM,CAAC,cAAD,EAAiBG,QAAQ,CAACC,IAA1B,CAAN;AACA,eAAOC,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OAJE,EAKH,UAAAI,IAAI,EAAI;AACJC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,QAAL,CAAcN,IAA1B;AACH,OAPE,CAAP;AASH,KAhBI;;AAkBL;AACR;AACA;AACA;AACQT,IAAAA,QAtBK,2BAsBgBC,QAtBhB,EAsB0B;AAAA,UAApBI,MAAoB,SAApBA,MAAoB;AAC3BA,MAAAA,MAAM,CAAC,kBAAD,EAAqBJ,QAArB,CAAN;AACA,aAAOA,QAAP;AACH,KAzBI;;AA2BL;AACR;AACA;AACQe,IAAAA,MA9BK,0BA8BcC,UA9Bd,EA8B0B;AAAA,UAAtBZ,MAAsB,SAAtBA,MAAsB;AAC3B,aAAOR,eAAe,CAACqB,cAAhB,CAA+BD,UAA/B,EAA2CV,IAA3C,CACH,UAAAC,QAAQ,EAAI;AACR,YAAIP,QAAQ,GAAGO,QAAQ,CAACC,IAAxB;AACAJ,QAAAA,MAAM,CAAC,iBAAD,EAAoBJ,QAAQ,CAACkB,EAA7B,CAAN;AACA,eAAOT,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACH,OALE,EAMH,UAAAI,IAAI,EAAI;AACJ,eAAOF,OAAO,CAACU,MAAR,CAAeR,IAAf,CAAP;AACH,OARE,CAAP;AAUH;AAzCI,GAHW;AA+CpBS,EAAAA,SAAS,EAAE;AAEP;AACR;AACA;AACA;AACQC,IAAAA,YANO,wBAMMnB,KANN,EAMaJ,IANb,EAMmB;AACvBI,MAAAA,KAAK,CAACJ,IAAN,GAAaA,IAAb;AACF,KARM;;AAUP;AACR;AACA;AACQwB,IAAAA,gBAbO,4BAaUpB,KAbV,EAaiBF,QAbjB,EAa2B;AAC9BE,MAAAA,KAAK,CAACH,QAAN,GAAiBC,QAAjB;AACH,KAfM;;AAiBP;AACR;AACA;AACQuB,IAAAA,eApBO,2BAoBSrB,KApBT,EAoBgBc,UApBhB,EAoB4B;AAC/B,UAAIQ,aAAa,GAAGtB,KAAK,CAACJ,IAAN,CAAW2B,SAAX,CAAqB,UAAAzB,QAAQ;AAAA,eAAIA,QAAQ,CAACkB,EAAT,KAAgBF,UAApB;AAAA,OAA7B,CAApB;AACAd,MAAAA,KAAK,CAACJ,IAAN,CAAW4B,MAAX,CAAkBF,aAAlB,EAAiC,CAAjC;AACH;AAvBM;AA/CS,CAAjB","sourcesContent":["import PropertyService from '../services/PropertyService';\n\nconst initialState = {\n    list : [],\n    selected : '',\n}\n\nexport const property = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        \n        /**\n         * Get property\n         * \n         */\n        list({ commit }) {\n            return PropertyService.getOwnerProperty().then(\n                feedback => {\n                    commit('propertyList', feedback.data)\n                    return Promise.resolve(feedback)\n                },\n                fail => {\n                    console.log(fail.response.data)\n                }\n            );            \n        },\n\n        /**\n         * Set selected property\n         * \n         */\n        selected({ commit }, property) {\n            commit('selectedProperty', property)\n            return property\n        },\n\n        /**\n         * Delete property\n         */\n        delete({ commit }, propertyID) {\n            return PropertyService.deleteProperty(propertyID).then(\n                feedback => {\n                    let property = feedback.data;\n                    commit('deletedProperty', property.id);\n                    return Promise.resolve(feedback);\n                },\n                fail => {\n                    return Promise.reject(fail);\n                }\n            )\n        }\n\n    },\n    mutations: {\n\n        /**\n         * Store property list\n         * \n         */\n        propertyList(state, list) {\n           state.list = list\n        },\n\n        /**\n         * Store selected property\n         */\n        selectedProperty(state, property) {\n            state.selected = property\n        },\n\n        /**\n         * Remove deleted property\n         */\n        deletedProperty(state, propertyID) {\n            let propertyIndex = state.list.findIndex(property => property.id === propertyID)\n            state.list.splice(propertyIndex, 1)\n        },\n    }\n}"]}]}