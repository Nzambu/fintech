{"remainingRequest":"/var/www/html/teal/vue/node_modules/babel-loader/lib/index.js!/var/www/html/teal/vue/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/teal/vue/src/store/PropertyModule.js","dependencies":[{"path":"/var/www/html/teal/vue/src/store/PropertyModule.js","mtime":1613136523932},{"path":"/var/www/html/teal/vue/node_modules/cache-loader/dist/cjs.js","mtime":1612338812780},{"path":"/var/www/html/teal/vue/node_modules/babel-loader/lib/index.js","mtime":1612338812660},{"path":"/var/www/html/teal/vue/node_modules/eslint-loader/index.js","mtime":1612338813868}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgUHJvcGVydHlTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL1Byb3BlcnR5U2VydmljZSc7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgbGlzdDogW10sCiAgc2VsZWN0ZWQ6ICcnCn07CmV4cG9ydCB2YXIgcHJvcGVydHkgPSB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogaW5pdGlhbFN0YXRlLAogIGFjdGlvbnM6IHsKICAgIC8qKgogICAgICogR2V0IHByb3BlcnR5CiAgICAgKiAKICAgICAqLwogICAgbGlzdDogZnVuY3Rpb24gbGlzdChfcmVmKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgcmV0dXJuIFByb3BlcnR5U2VydmljZS5nZXRPd25lclByb3BlcnR5KCkudGhlbihmdW5jdGlvbiAoZmVlZGJhY2spIHsKICAgICAgICBjb21taXQoJ3Byb3BlcnR5TGlzdCcsIGZlZWRiYWNrLmRhdGEpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZmVlZGJhY2spOwogICAgICB9LCBmdW5jdGlvbiAoZmFpbCkgewogICAgICAgIGNvbnNvbGUubG9nKGZhaWwucmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFNldCBzZWxlY3RlZCBwcm9wZXJ0eQogICAgICogCiAgICAgKi8KICAgIHNlbGVjdGVkOiBmdW5jdGlvbiBzZWxlY3RlZChfcmVmMiwgcHJvcGVydHkpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCdzZWxlY3RlZFByb3BlcnR5JywgcHJvcGVydHkpOwogICAgICByZXR1cm4gcHJvcGVydHk7CiAgICB9LAoKICAgIC8qKgogICAgICogQ3JlYXRlIHByb3BlcnR5CiAgICAgKi8KICAgIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKF9yZWYzLCBwcm9wZXJ0eURhdGEpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgcmV0dXJuIFByb3BlcnR5U2VydmljZS5jcmVhdGVQcm9wZXJ0eShwcm9wZXJ0eURhdGEpLnRoZW4oZnVuY3Rpb24gKGZlZWRiYWNrKSB7CiAgICAgICAgdmFyIHByb3BlcnR5ID0gZmVlZGJhY2suZGF0YTsKICAgICAgICBjb21taXQoJ2NyZWF0ZWRQcm9wZXJ0eScsIHByb3BlcnR5KTsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZlZWRiYWNrKTsKICAgICAgfSwgZnVuY3Rpb24gKGZhaWwpIHsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZmFpbCk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFVwZGF0ZSBwcm9wZXJ0eQogICAgICovCiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShfcmVmNCwgcHJvcGVydHlEYXRhKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgIHJldHVybiBQcm9wZXJ0eVNlcnZpY2UudXBkYXRlUHJvcGVydHkocHJvcGVydHlEYXRhKS50aGVuKGZ1bmN0aW9uIChmZWVkYmFjaykgewogICAgICAgIHZhciBwcm9wZXJ0eSA9IGZlZWRiYWNrLmRhdGE7CiAgICAgICAgY29tbWl0KCd1cGRhdGVkUHJvcGVydHknLCBwcm9wZXJ0eSk7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmZWVkYmFjayk7CiAgICAgIH0sIGZ1bmN0aW9uIChmYWlsKSB7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGZhaWwpOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBEZWxldGUgcHJvcGVydHkKICAgICAqLwogICAgZGVsZXRlOiBmdW5jdGlvbiBfZGVsZXRlKF9yZWY1LCBwcm9wZXJ0eUlEKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgIHJldHVybiBQcm9wZXJ0eVNlcnZpY2UuZGVsZXRlUHJvcGVydHkocHJvcGVydHlJRCkudGhlbihmdW5jdGlvbiAoZmVlZGJhY2spIHsKICAgICAgICB2YXIgcHJvcGVydHkgPSBmZWVkYmFjay5kYXRhOwogICAgICAgIGNvbW1pdCgnZGVsZXRlZFByb3BlcnR5JywgcHJvcGVydHkuaWQpOwogICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZmVlZGJhY2spOwogICAgICB9LCBmdW5jdGlvbiAoZmFpbCkgewogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChmYWlsKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIC8qKgogICAgICogU3RvcmUgcHJvcGVydHkgbGlzdAogICAgICogCiAgICAgKi8KICAgIHByb3BlcnR5TGlzdDogZnVuY3Rpb24gcHJvcGVydHlMaXN0KHN0YXRlLCBsaXN0KSB7CiAgICAgIHN0YXRlLmxpc3QgPSBsaXN0OwogICAgfSwKCiAgICAvKioKICAgICAqIFN0b3JlIHNlbGVjdGVkIHByb3BlcnR5CiAgICAgKi8KICAgIHNlbGVjdGVkUHJvcGVydHk6IGZ1bmN0aW9uIHNlbGVjdGVkUHJvcGVydHkoc3RhdGUsIHByb3BlcnR5KSB7CiAgICAgIHN0YXRlLnNlbGVjdGVkID0gcHJvcGVydHk7CiAgICB9LAoKICAgIC8qKgogICAgICogQ3JlYXRlZCBwcm9wZXJ0eQogICAgICovCiAgICBjcmVhdGVkUHJvcGVydHk6IGZ1bmN0aW9uIGNyZWF0ZWRQcm9wZXJ0eShzdGF0ZSwgcHJvcGVydHkpIHsKICAgICAgc3RhdGUubGlzdC5wdXNoKHByb3BlcnR5KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBVcGRhdGUgcHJvcGVydHkKICAgICAqIAogICAgICovCiAgICB1cGRhdGVkUHJvcGVydHk6IGZ1bmN0aW9uIHVwZGF0ZWRQcm9wZXJ0eShzdGF0ZSwgX3VwZGF0ZWRQcm9wZXJ0eSkgewogICAgICB2YXIgcHJvcGVydHlJbmRleCA9IHN0YXRlLmxpc3QuZmluZEluZGV4KGZ1bmN0aW9uIChwcm9wZXJ0eSkgewogICAgICAgIHJldHVybiBwcm9wZXJ0eS5pZCA9PT0gX3VwZGF0ZWRQcm9wZXJ0eS5pZDsKICAgICAgfSk7CgogICAgICBpZiAocHJvcGVydHlJbmRleCAhPT0gLTEpIHsKICAgICAgICBzdGF0ZS5saXN0LnNwbGljZShwcm9wZXJ0eUluZGV4LCAxLCBfdXBkYXRlZFByb3BlcnR5KTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIFJlbW92ZSBkZWxldGVkIHByb3BlcnR5CiAgICAgKi8KICAgIGRlbGV0ZWRQcm9wZXJ0eTogZnVuY3Rpb24gZGVsZXRlZFByb3BlcnR5KHN0YXRlLCBwcm9wZXJ0eUlEKSB7CiAgICAgIHZhciBwcm9wZXJ0eUluZGV4ID0gc3RhdGUubGlzdC5maW5kSW5kZXgoZnVuY3Rpb24gKHByb3BlcnR5KSB7CiAgICAgICAgcmV0dXJuIHByb3BlcnR5LmlkID09PSBwcm9wZXJ0eUlEOwogICAgICB9KTsKICAgICAgc3RhdGUubGlzdC5zcGxpY2UocHJvcGVydHlJbmRleCwgMSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/var/www/html/teal/vue/src/store/PropertyModule.js"],"names":["PropertyService","initialState","list","selected","property","namespaced","state","actions","commit","getOwnerProperty","then","feedback","data","Promise","resolve","fail","console","log","response","create","propertyData","createProperty","reject","update","updateProperty","delete","propertyID","deleteProperty","id","mutations","propertyList","selectedProperty","createdProperty","push","updatedProperty","propertyIndex","findIndex","splice","deletedProperty"],"mappings":"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","sourcesContent":["import PropertyService from '../services/PropertyService';\n\nconst initialState = {\n    list : [],\n    selected : '',\n}\n\nexport const property = {\n    namespaced: true,\n    state: initialState,\n    actions: {\n        \n        /**\n         * Get property\n         * \n         */\n        list({ commit }) {\n            return PropertyService.getOwnerProperty().then(\n                feedback => {\n                    commit('propertyList', feedback.data)\n                    return Promise.resolve(feedback)\n                },\n                fail => {\n                    console.log(fail.response.data)\n                }\n            );            \n        },\n\n        /**\n         * Set selected property\n         * \n         */\n        selected({ commit }, property) {\n            commit('selectedProperty', property)\n            return property\n        },\n\n        /**\n         * Create property\n         */\n        create({ commit }, propertyData) {\n            return PropertyService.createProperty(propertyData).then(\n                feedback => {\n                    let property = feedback.data;\n                    commit('createdProperty', property);\n                    return Promise.resolve(feedback);\n                },\n                fail => {\n                    return Promise.reject(fail);\n                }\n            )\n        },\n\n        /**\n         * Update property\n         */\n        update({ commit }, propertyData) {\n            return PropertyService.updateProperty(propertyData).then(\n                feedback => {\n                    let property = feedback.data;\n                    commit('updatedProperty', property);\n                    return Promise.resolve(feedback);\n                },\n                fail => {\n                    return Promise.reject(fail);\n                }\n            )\n        },\n\n        /**\n         * Delete property\n         */\n        delete({ commit }, propertyID) {\n            return PropertyService.deleteProperty(propertyID).then(\n                feedback => {\n                    let property = feedback.data;\n                    commit('deletedProperty', property.id);\n                    return Promise.resolve(feedback);\n                },\n                fail => {\n                    return Promise.reject(fail);\n                }\n            )\n        }\n\n    },\n    mutations: {\n\n        /**\n         * Store property list\n         * \n         */\n        propertyList(state, list) {\n           state.list = list\n        },\n\n        /**\n         * Store selected property\n         */\n        selectedProperty(state, property) {\n            state.selected = property\n        },\n\n        /**\n         * Created property\n         */\n        createdProperty(state, property) {\n            state.list.push(property)\n        },\n\n        /**\n         * Update property\n         * \n         */\n        updatedProperty(state, updatedProperty) {\n            let propertyIndex = state.list.findIndex(property => property.id === updatedProperty.id)            \n            if(propertyIndex !== -1) {\n                state.list.splice(propertyIndex, 1, updatedProperty)\n            }\n        },\n\n        /**\n         * Remove deleted property\n         */\n        deletedProperty(state, propertyID) {\n            let propertyIndex = state.list.findIndex(property => property.id === propertyID)\n            state.list.splice(propertyIndex, 1)\n        },\n    }\n}"]}]}